---
title: "Ejercicio_1"
author: "JuanRomero"
date: "6/6/2021"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

library(tidyverse)
library(ggplot2)
library(dplyr)
library(corrplot)
library(reshape2) 
library(caret)

```

```{r Carga de datos}
df_houses_prices = read.csv("house_prices.csv")
df_houses_prices %>% head()

```
### Resumen de datos
```{r}
df_houses_prices %>% summary() 

```

### Analisis de las variables 

```{r Analisis de variables}
for (name in colnames(df_houses_prices)){
  print(name)
  print(df_houses_prices %>% select("var" = name) %>% 
    ggplot(aes(x=var, y=..density..)) + 
    geom_density(col="magenta", lwd=1, fill = "cyan" ) +
    theme_minimal())
  
}
```






## Imputaci√≥n de data faltante
### Verificacion de datos faltantes

```{r Verificar datos}

colNas <- colnames(df_houses_prices)[!complete.cases(t(df_houses_prices))]
colNas %>% head()

```


### Porcentaje de NAS

```{r porcentaje NAS}

incompleteData <- df_houses_prices %>% select(colNas)
incompleteData %>% head()

```
### Calculo porcentaje NA
```{r}
porcentajeNAS <- as.data.frame(apply(incompleteData, MARGIN = 2, function(col) mean(is.na(col))))

colnames(porcentajeNAS ) <- c("porcentaje")

porcentajeNAS %>% head()
```


### Filtrando los que tengan menos de 0.05 de NAS
```{r}

procesables <- porcentajeNAS %>% filter(
  porcentajeNAS < 0.05
)
procesables

```

### Calculando la inputacion variable MasVnrArea

```{r}
incompleteData <- incompleteData %>% mutate(
  MasVnrArea_media = ifelse(is.na(MasVnrArea), mean(MasVnrArea, na.rm =  TRUE), MasVnrArea ),
  MasVnrArea_mediana = ifelse(is.na(MasVnrArea), median(MasVnrArea, na.rm =  TRUE), MasVnrArea )
) 
incompleteData %>% head()

```
### Graficando la distribucion del efecto de las inputaciones variable MasVnrArea

```{r}
incompleteData %>% ggplot(
  aes(x=MasVnrArea, y=..density..) 
) + geom_density(color = "blue", lwd = 1) +
  geom_density(aes(x = MasVnrArea_media, y = ..density..), col = "red" , lwd = 1) + 
  geom_density(aes(x = MasVnrArea_mediana, y = ..density..), col = "green" , lwd = 1) + theme_minimal()
```

### Verificando la inputacion de una variable que tiene mas de 0.05  de NA  LotFrontage

```{r}
df_houses_prices <- df_houses_prices %>% mutate(
  LotFrontage_media = ifelse(is.na(LotFrontage), mean(LotFrontage, na.rm =  TRUE), LotFrontage ),
  LotFrontage_mediana = ifelse(is.na(LotFrontage), median(LotFrontage, na.rm =  TRUE), LotFrontage )
) 
```
```{r}
df_houses_prices %>% ggplot(
  aes(x=LotFrontage, y=..density..) 
) + geom_density(color = "blue", lwd = 1) +
  geom_density(aes(x = LotFrontage_media, y = ..density..), col = "red" , lwd = 1) + 
  geom_density(aes(x = LotFrontage_mediana, y = ..density..), col = "green" , lwd = 1) + theme_minimal()
```

### Analisis de distribucion MasVnrArea

```{r}

sub_df_houses_prices<- incompleteData %>%  
  select(MasVnrArea, MasVnrArea_media, MasVnrArea_mediana)

data_long<-melt(sub_df_houses_prices)

ggplot(data_long, aes(x = variable, y = value)) +           
  geom_boxplot()

```

### Podemos concluir que el porcentaje de NA es bajo no altera la distribucion para la variable MasVnrArea


### Analisis de distribucion LotFrontage

```{r}

sub_df_houses_prices<- df_houses_prices %>%  
  select(LotFrontage, LotFrontage_media, LotFrontage_mediana)

data_long<-melt(sub_df_houses_prices)

ggplot(data_long, aes(x = variable, y = value)) +           
  geom_boxplot()

```
### Podemos observar que graficamente usando boxplot no se ve ninguna alteracion con la imputacion de NA sobre la variable LotFrontage sin embargo en la grafica de densidad si se puede observar de mejor maneja

### Revision de datos NA

```{r}

NAsCount<-as.data.frame(apply(sub_df_houses_prices, 2, 
                    function(col)sum(is.na(col))))
colnames(NAsCount)<-c("Cantidad")
NAsCount

NAsCount/nrow(sub_df_houses_prices)


```

### Codificacion de variables
#### Buscando las variables
```{r}


table(df_houses_prices$LotShape)
table(df_houses_prices$Heating)
table(df_houses_prices$ExterQual)


```
#### Asignacion de variables nuevas para categorizar
```{r}

OHE <- dummyVars("~.",df_houses_prices %>% select(LotShape, Heating, ExterQual))

OHE_df <- data.frame(predict(OHE, newdata = df_houses_prices %>% select(LotShape, Heating, ExterQual)))

OHE_df %>% head()



```

### Frecuency encoding
```{r}

OHE <- dummyVars("~.",df_houses_prices)

OHE_df <- data.frame(predict(OHE, newdata = df_houses_prices))

OHE_df %>% head()

```








